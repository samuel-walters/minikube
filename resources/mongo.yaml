kind: ConfigMap
apiVersion: v1
metadata:
  name: poststarthook
data:
  poststart.sh: |
    #!/bin/bash
    exec >logfile.txt 2>&1
    host=${HOSTNAME}
    echo "host: $host"
    number=${HOSTNAME//[!0-9]/}
    echo "NUMBER: $number"
    sleep 3
    if [ "$HOSTNAME" = "mongo-0" ]; then
      mongo --eval "rs.initiate( { _id : 'rs0', members: [ { _id: 0, host: 'mongo-0.mongo.default.svc.cluster.local:27017', priority: 0.5 } ] })"
    else
      mongo --host "rs0/mongo-0.mongo,mongo-1.mongo,mongo-2.mongo,mongo-3.mongo" --eval "rs.add( { _id: "$number", host: '"$host".mongo:27017', priority: 0, votes: 0} )"
      rs_status_code=$(mongo --quiet --eval 'rs.status().code')
      counter=0
      # https://www.mongodb.com/docs/manual/reference/method/rs.add/#mongodb-method-rs.add
      # Maybe update mongo as a workaround
      while [ "$rs_status_code" = "94" ]
      do
        echo "The counter is $counter"
        ((counter++))
        if [ "$counter" = "6" ]; then
          break
        fi
        sleep 5
        rs_status_code=$(mongo --quiet --eval 'rs.status().code')
      done
      if [ "$counter" != "6" ]; then
        sleep 5
        mongo --host "rs0/mongo-0.mongo,mongo-1.mongo,mongo-2.mongo,mongo-3.mongo" --eval "cfg = rs.conf(); cfg.members["$number"].priority = 0.5; cfg.members["$number"].votes = 1; rs.reconfig(cfg)"
        echo "command would have been executed"
        echo "rs $rs_status_code"
      fi
      echo "outside: $rs_status_code"
    fi
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    name: mongo
spec:
  # This is a "headless" service.
  clusterIP: None
  selector:
    role: mongo
  ports:
    - port: 27017
      targetPort: 27017
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: "mongo"
  replicas: 3
  selector:
    matchLabels:
      role: mongo
  template:
    metadata:
      labels:
        role: mongo
    spec:
      terminationGracePeriodSeconds: 20
      containers:
      - name: mongo
        image: mongo:4.2.22
        command:
          - mongod
        args:
          - "--replSet=rs0"
          - "--bind_ip=0.0.0.0"
        ports:
          - containerPort: 27017
        volumeMounts:
          - name: storage
            mountPath: /data/db
          - name: hookvolume
            mountPath: /opt/poststart.sh
            subPath: poststart.sh
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", /opt/poststart.sh]
      volumes:
        - name: hookvolume
          configMap:
            name: poststarthook
            defaultMode: 0755
  volumeClaimTemplates:
  - metadata:
      name: storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 256Mi